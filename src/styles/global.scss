*, *:after, *:before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --primary-color: #533680;
    --secondary-color: #020646;
    --light-color: #ddd;
    --dark-color: #111;
    --correct-color: #315C2B;
    --incorrect-color: #FE4A49;

    --sp-1: .2rem;
    --sp-2: .7rem;
    --sp-3: 1rem;
    --sp-4: 2rem;
    --sp-5: 4rem;

    --cols: 1;
    
    --fs-xs: var(--fs) * 0.7;
    --fs-sm: var(--fs) * 0.5;
    --fs: .8rem;
    --fs-lg: calc(var(--fs) * 1.2);
    --fs-xl: calc(var(--fs) * 3);
}


@media screen and (min-width: 480px) {
    :root {
        --cols: 2;
        --fs: 1rem;
    }
}

@media screen and (min-width: 720px) {
    :root {
        --cols: 3;
        --fs: 1.1rem;
    }
}

@media screen and (min-width: 1080px) {
    :root {
        --cols: 4;
        --fs: 1.2rem;
    }
}

html {
    font-size: var(--fs);
}

button {
    cursor: pointer;
}

.button {
    background: var(--primary-color);
    border: none;
    padding: var(--sp-3) var(--sp-3);
    color: var(--light-color);
    text-decoration: none;

    &:disabled {
        background: lightgrey;
        cursor: default;
    }
}

.container {
    margin: 0 auto;
    max-width: 1400px;
    width: 100%;
    padding: 0 var(--sp-3);
}

.title {
    color: var(--primary-color);
    font-size: var(--fs-xl);
    text-transform: uppercase;
    text-align: center;
    margin: var(--sp-4) 0;
}



.select {
    padding: var(--sp-2);
    display: flex;

    label {
        --outline-width: 2px;
        width: 100%;
        outline: var(--outline-width) solid var(--primary-color);
        padding: var(--sp-2);
        cursor: pointer;
        text-align: center;
        transition: 100ms;
    }


    label.checked  {
        --outline-width: 4px;
    }

    input {
        display: none;
    }
}

.loading {
    position: relative;

    &::after {
        content: "";
        width: 10px;
        height: 10px;
        background: var(--dark-color);
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        border-radius: 50%;
        animation: loadingAnimation infinite alternate ease-in-out 1000ms;
        transform: translate(0px, -20px);
    }
}

@keyframes loadingAnimation {
    0% {
        transform: translate(40px, 0px);
    }
    25% {
        transform: translate(20px, -20px);
    }
    50% {
        transform: translate(0px, 0px);
    }
    75% {
        transform: translate(-20px, -20px);
    }
    100% {
        transform: translate(-40px, 0px);
    }
}